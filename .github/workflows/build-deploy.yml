name: test-and-deploy

on:
  push:

jobs:
  test-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'microsoft'
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3
      - name: Build with gradle
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
        with:
          arguments: build
      - name: Copy the build gradle
        uses: actions/upload-artifact@v3
        with:
          name: Package
          path: build/libs
#  docker:
#    needs: test-build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#      - name: Set up docker buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Login to docker hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - name: Download Package result
#        uses: actions/download-artifact@v3
#        with:
#          name: Package
#      - name: See the files
#        shell: bash
#        run: |
#          pwd
#          ls -la
#      - name: Build and push dockerfile
#        uses: docker/build-push-action@v4
#        with:
#          push: true
#          context: .
#          tags: santihs/myspringcontainer:latest
  vm:
    needs: test-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download Package result
        uses: actions/download-artifact@v3
        with:
          name: Package
      - name: ls -la
        run: |
          ls -la
      - name: Copy dockerfile and docker compose
        uses: nogsantos/scp-deploy@master
        with:
          src: Dockerfile docker-compose.yml *.jar
          host: ${{ secrets.SSH_HOST }}
          remote: ${{ secrets.SSH_DIR }}
          port: ${{ secrets.SSH_PORT }}
          user: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}